<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on Playing with Projections</title>
    <link>/</link>
    <description>Recent content in Overview on Playing with Projections</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>By Thomas Coopman - Michel Grootjans</copyright>
    <lastBuildDate>Fri, 16 Aug 2019 19:32:11 +0200</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Types of players</title>
      <link>/challenge/types_of_players/</link>
      <pubDate>Mon, 09 Sep 2019 14:46:36 +0200</pubDate>
      
      <guid>/challenge/types_of_players/</guid>
      <description>This is an open question without a fixed answer.
We are thinking about starting a targetted marketing campaign to our users. The problem is that we don&amp;rsquo;t actually know what kind of players we have. Can you think of what kind of different players we could have? Can you find different clusters of players?
Answer click to reveal answer This is an open question without a real answer, come to us and show us what you got.</description>
    </item>
    
    <item>
      <title>Overview of the challenges</title>
      <link>/challenge/list/</link>
      <pubDate>Sat, 17 Aug 2019 10:10:46 +0200</pubDate>
      
      <guid>/challenge/list/</guid>
      <description>We recommend you to start with the basic challenges and do them ordered. Once you feel comfortable doing those you can pick one of the advanced challenges.
Some, but not all, of the challenges will have answers, so that you can verify your answers with these.
Basic The basic challenges should be done in order.
 Count the number of events Count the number of registered players Count the number of players registered per month  Advanced Not all the advanced challenges have to be done in order.</description>
    </item>
    
    <item>
      <title>Eventstore API</title>
      <link>/doc/api/</link>
      <pubDate>Sat, 17 Aug 2019 09:51:06 +0200</pubDate>
      
      <guid>/doc/api/</guid>
      <description>As an exercise we have hugely simplfied the API while trying to find the relevant details necessary to implement this workshop.
The API for every language looks the same. It has an EventStore with one method replay. The replay method takes two arguments: the streamname and a projection. And a projection is a function that takes an event, does something with it and doesn&amp;rsquo;t return anything.
In pseudo code an example could look like this:</description>
    </item>
    
    <item>
      <title>Create a top ranking per month</title>
      <link>/challenge/top_player_of_the_month/</link>
      <pubDate>Sat, 17 Aug 2019 09:46:44 +0200</pubDate>
      
      <guid>/challenge/top_player_of_the_month/</guid>
      <description>This is the player who won the most different quizzes (not games!) and is not a bot.
Domain If a player plays a quiz 3 times in a mont and wins each time, the quiz is only counted once.</description>
    </item>
    
    <item>
      <title>Determine the high score of a quiz</title>
      <link>/challenge/who_has_the_quiz_high_score/</link>
      <pubDate>Sat, 17 Aug 2019 09:46:36 +0200</pubDate>
      
      <guid>/challenge/who_has_the_quiz_high_score/</guid>
      <description>This answer depends on Look for bots and Who won this game
The high score of a quiz is equal to the maximum score a player got on that quiz over all played games. Remember that the maximum score is only counted for players who play the quiz for the first time. So when a player gets a higher score on a second play, this score doesn&amp;rsquo;t count.</description>
    </item>
    
    <item>
      <title>Determine the winner of a game</title>
      <link>/challenge/who_won_the_game/</link>
      <pubDate>Sat, 17 Aug 2019 09:46:36 +0200</pubDate>
      
      <guid>/challenge/who_won_the_game/</guid>
      <description>The winner of a game is the player with the most points in total for the game. Points are scored per question. To calculate points for a question, calculate 1000 * ( 1 - ( [response time] / 240 )) and round this number down.
In case that multiple players have the same amount of points, there are multiple winners.
Bonus Ofcourse, we want to remove the bots from the winners.</description>
    </item>
    
    <item>
      <title>Look for bots</title>
      <link>/challenge/look_for_bots/</link>
      <pubDate>Sat, 17 Aug 2019 09:46:26 +0200</pubDate>
      
      <guid>/challenge/look_for_bots/</guid>
      <description>We have the feeling that we might have cheaters in our system. So we would like you to find the cheaters. First it might be a good idea to think about how we might detect bots/cheaters (what would an incentive be for a cheater?).
When you have some ideas, try to write a projection to detect the bots.
Spoilers </description>
    </item>
    
    <item>
      <title>Verify our marketing campaign</title>
      <link>/challenge/verify_marketing_campaign/</link>
      <pubDate>Sat, 17 Aug 2019 09:46:17 +0200</pubDate>
      
      <guid>/challenge/verify_marketing_campaign/</guid>
      <description>The event stream doesn&amp;rsquo;t contain a marketing campaign yet, so go pick a different challenge.</description>
    </item>
    
    <item>
      <title>Find inactive players</title>
      <link>/challenge/find_inactive_players/</link>
      <pubDate>Sat, 17 Aug 2019 09:46:05 +0200</pubDate>
      
      <guid>/challenge/find_inactive_players/</guid>
      <description>An inactive player is a player that has either played less than 1 game in 1 month, or has created less than 1 quiz in 1 month for a given month.
Tip If you feel like you know how to do the basic projections, it&amp;rsquo;s ok to skip this challenge and go on to the advanced challenges.</description>
    </item>
    
    <item>
      <title>Find the most popular quizzes</title>
      <link>/challenge/find_most_popular_quizzes/</link>
      <pubDate>Sat, 17 Aug 2019 09:45:38 +0200</pubDate>
      
      <guid>/challenge/find_most_popular_quizzes/</guid>
      <description>The most popular quiz is the quiz that has most played games. What are the name and id of the 10 most popular quizzes?
Domain question What does the most played quizzes really mean? (see Spoilers)
Part 2
Spoilers SPOILER ALERT We really urge you to think about this yourself first before reading on, because this spoils the exercise. But if you can&amp;rsquo;t find it, or want to check your answer read on.</description>
    </item>
    
    <item>
      <title>Find the most popular quizzes (part 2)</title>
      <link>/challenge/find_most_popular_quizzes_2/</link>
      <pubDate>Sat, 17 Aug 2019 09:45:38 +0200</pubDate>
      
      <guid>/challenge/find_most_popular_quizzes_2/</guid>
      <description>Now that we know the overal most popular quizzes, we would also like to know the most popular quizzes per month. Can you provide us with a top 10 of the most popular quizzes per month. Again, we want the name and id of the quiz.
Can you reuse structures of your previous solution or do you create a new solution from scratch?
Part 3</description>
    </item>
    
    <item>
      <title>Find the most popular quizzes (part 3)</title>
      <link>/challenge/find_most_popular_quizzes_3/</link>
      <pubDate>Sat, 17 Aug 2019 09:45:38 +0200</pubDate>
      
      <guid>/challenge/find_most_popular_quizzes_3/</guid>
      <description>In the 2 previous parts, you answered what the most popular quiz is by finding out how many times the quiz was played. While this is interesting, we&amp;rsquo;re not sure if this is the best way to evaluate popular quizzes. An other metric could be to count how many players joined a game.
Now we ask you to find the most popular quizzes, not by how many times they have been played, but by how many players joined.</description>
    </item>
    
    <item>
      <title>Count the number of registered players per month</title>
      <link>/challenge/count_number_of_registered_players_per_month/</link>
      <pubDate>Sat, 17 Aug 2019 09:45:26 +0200</pubDate>
      
      <guid>/challenge/count_number_of_registered_players_per_month/</guid>
      <description>This challenge builds on top of the previous one. You should be able to group player registrations per month. The expected output looks like this:
 2019-8: 15 2019-9: 42  Tip The events are ordered on time, so you should not do any ordering yourself.
Answer click to reveal answer Basic  2019-8: 29 2019-9: 24  Full  2018-5: 17 2018-6: 43 2018-7: 49 2018-8: 58 2018-9: 123 2018-10: 115 2018-11: 146 2018-12: 176 2019-1: 134 2019-2: 95 2019-3: 91 2019-4: 58 2019-5: 110 2019-6: 121 2019-7: 118 2019-8: 73    Advanced challenges</description>
    </item>
    
    <item>
      <title>Count the number of registered players</title>
      <link>/challenge/count_number_of_registered_players/</link>
      <pubDate>Sat, 17 Aug 2019 09:42:20 +0200</pubDate>
      
      <guid>/challenge/count_number_of_registered_players/</guid>
      <description>This should also be self-explanatory. We&amp;rsquo;d like to know how many players have registered in total.
Answer click to reveal answer  Basic: 53 Full: 1527    Next challenge</description>
    </item>
    
    <item>
      <title>Count the total number of events</title>
      <link>/challenge/count_number_of_events/</link>
      <pubDate>Sat, 17 Aug 2019 09:40:38 +0200</pubDate>
      
      <guid>/challenge/count_number_of_events/</guid>
      <description>This should be self-explanatory. Most repository technologies start with this example implemented.
Make it run, then validate your answer.
Answer Click to reveal answer  Basic: 13167 Full: 3427221    Next challenge</description>
    </item>
    
    <item>
      <title>Domain</title>
      <link>/doc/domain/</link>
      <pubDate>Sat, 17 Aug 2019 09:33:28 +0200</pubDate>
      
      <guid>/doc/domain/</guid>
      <description>A listing of the events can be found here.</description>
    </item>
    
    <item>
      <title>Generating data</title>
      <link>/doc/generating_data/</link>
      <pubDate>Fri, 16 Aug 2019 20:16:54 +0200</pubDate>
      
      <guid>/doc/generating_data/</guid>
      <description>Download the generator You can download the generator for Windows, Mac or Linux.
Move the executable to the base folder where you want to put your code as well and run the generator in a terminal (depending on your OS you need to give the binary executable rights). On both Mac and Windows you might get warnings that the executable is not signed, but you can still run it.
The data The generator will generate 2 files: data/basic.</description>
    </item>
    
  </channel>
</rss>